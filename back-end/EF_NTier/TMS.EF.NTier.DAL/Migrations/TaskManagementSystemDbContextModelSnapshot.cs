// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMS.EF.NTier.DAL;

#nullable disable

namespace TMS.EF.NTier.DAL.Migrations
{
    [DbContext(typeof(TaskManagementSystemDbContext))]
    partial class TaskManagementSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AsigneeId")
                        .HasColumnType("int");

                    b.Property<string>("Descritption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IssueTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectColumnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueTypeId");

                    b.HasIndex("ProjectColumnId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.IssueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("IssueTypes");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Project_Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.ProjectColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectColumns");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.Issue", b =>
                {
                    b.HasOne("TMS.EF.NTier.DAL.Entities.IssueType", "IssueType")
                        .WithMany("Issues")
                        .HasForeignKey("IssueTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Issues_To_IssueTypes");

                    b.HasOne("TMS.EF.NTier.DAL.Entities.ProjectColumn", "ProjectColumn")
                        .WithMany("Issues")
                        .HasForeignKey("ProjectColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Issues_To_ProjectColumns");

                    b.Navigation("IssueType");

                    b.Navigation("ProjectColumn");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.IssueType", b =>
                {
                    b.HasOne("TMS.EF.NTier.DAL.Entities.Project", "Project")
                        .WithMany("IssueTypes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IssueTypes_To_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.ProjectColumn", b =>
                {
                    b.HasOne("TMS.EF.NTier.DAL.Entities.Project", "Project")
                        .WithMany("ProjectColumns")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProjectColumns_To_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.IssueType", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.Project", b =>
                {
                    b.Navigation("IssueTypes");

                    b.Navigation("ProjectColumns");
                });

            modelBuilder.Entity("TMS.EF.NTier.DAL.Entities.ProjectColumn", b =>
                {
                    b.Navigation("Issues");
                });
#pragma warning restore 612, 618
        }
    }
}
